Before 0.9:

* Come up with a more attractive layout for the opening screen.

Before 1.0:

* Improve the calculation of solution equivalence, so that two states
  that differ only in (say) the ordering of reserve cards are seen as
  equivalent. This will require the game state encoding to change, so
  that individual reserves and tableau piles do not keep their
  identities, but are simply listed in some fixed ordering. (It is not
  clear if this will in turn require extra state data to be appended.)
  Moves will also need to be stored differently internally, recording
  the card being moved instead of the place it came from. This will
  require a change to the encoding of the session files, which is why
  this should be done before 1.0.

* Add unit tests for the game logic code. This will probably also
  require new Makefile rules.

* Create a debian package, to simplify installation for various Linux
  distro users.

* Create a homebrew formula (?) to simplify Mac installation.

* Is there an equivalent for Windows, without going the full
  wininstall route? Is it enough to just create a self-extracting zip?

* Make a full pass through the documentation, looking for errors and
  outdated information.

* Make a full pass through the comments and code, likewise.

After 1.0:

* Add feature to generate a new layout, random but guaranteed to be
  solvable. Such games would not have a configuration ID and would not
  generate saved solutions. These differences might require changes in
  a few different areas of the existing code. However, such a feature
  would allow users to play the game more than 1500 times. This will
  require finding an algorithm that reliably generates a new,
  solvable, not boring game. I've managed to do first two easily
  enough, but the third has completely eluded my efforts so far.
